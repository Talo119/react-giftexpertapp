{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GrifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridItem","console","log","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAMlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,c,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAe,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEpC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAXAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAItB,CAACtB,IAEIuB,EDfuBK,CAAa5B,GAA/Ba,EADwB,EAC7BN,KAAYe,EADiB,EACjBA,QASnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEnBxBkB,EAAgB,WAAO,IAAD,EAEK3C,mBAAS,CAAC,gBAFf,mBAExB4C,EAFwB,KAEZ7C,EAFY,KAW/B,OACI,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACM6C,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCdzB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5a151850.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputchange = (e) =>{\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('Submit hecho');\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats =>[inputValue, ...cats]);    \r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (                 \r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputchange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories:PropTypes.func.isRequired,\r\n}\r\n","\r\nexport const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ikbSJ90b6LzAfGtKfaBKool8vrKZVoc0`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log(gifs);\r\n    //setImages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GrifGridItem = ( {id,title,url} ) => {\r\n    console.log(id,title,url)\r\n    return (        \r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GrifGridItem } from './GrifGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n\r\n    /*const [images, setImages] = useState([])\r\n    useEffect(() =>{\r\n        getGifs(category)\r\n        .then(setImages);\r\n    },[category]) */\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">            \r\n                {\r\n                    images.map(img =>(\r\n                        <GrifGridItem \r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }            \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs(category)\r\n            .then(imgs =>{          \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\nexport const GiftExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    /*const handleAdd = () =>{\r\n        const newCategorie = 'One Piece';\r\n        //setCategories([...categories,newCategorie]);\r\n        setCategories(cats => [...cats,newCategorie]);\r\n    }*/\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <hr/>\r\n          <AddCategory setCategories={setCategories} />\r\n          <ol>\r\n              { categories.map( category =>(\r\n                  <GiftGrid\r\n                    key={category}\r\n                    category={category}\r\n                  />\r\n              )) \r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(  \n  <GiftExpertApp /> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}